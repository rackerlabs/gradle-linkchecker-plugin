group = 'org.openrepose'
def baseVersion = '0.3.0'
version = project.hasProperty('release') ? baseVersion : "$baseVersion-SNAPSHOT"
description = "Gradle plugin to ease development containg HTML using the linkchecker task"

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.8"
        classpath( "com.netflix.nebula:gradle-git-scm-plugin:3.0.1")
    }
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'nebula.gradle-git-scm'

repositories {
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'org.jsoup:jsoup:1.8.2'
    compile 'com.google.guava:guava:18.0'
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"
}

// NOTE:    The gradle.publish.key and gradle.publish.secret need added to your ~/.gradle/gradle.properties as per the
//          instructions located at https://plugins.gradle.org/docs/submit
pluginBundle {
    website = 'https://github.com/rackerlabs/gradle-linkchecker-plugin'
    vcsUrl = 'https://github.com/rackerlabs/gradle-linkchecker-plugin'
    description = project.description
    tags = ['html', 'linkchecker']

    plugins {
        gradleLinkcheckerPlugin {
            id = 'org.openrepose.gradle.plugins.linkchecker'
            displayName = 'Gradle Link Checker plugin'
        }
    }
}

publishing {
    publications {
        mavenJar(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name 'releases.maven.research.rackspace.com'
            url 'https://maven.research.rackspacecloud.com/content/repositories/releases'
            credentials {
                // NOTE: These properties should be in your ~/.gradle/gradle.properties
                username property('maven.repo.username')
                password property('maven.repo.password')
            }
        }
    }
}

task('tagVersion', description: 'Tag the repository with the current version.', group: 'release') << {
    scmFactory.create().tag(version)
}

task('release', description: 'Release the project and publish to public repo.', group: 'release', dependsOn: [test, publish, tagVersion, publishPlugins])

task unversionedJar(type: Jar, dependsOn: 'jar') {
    version = null
    from sourceSets.main.output
}

task installPlugin(type: Copy, dependsOn: 'unversionedJar') {
    def gradleInstallDir = gradle.gradleHomeDir
    group = 'installation'
    description = 'Installs the plugin jar in your gradle distribution.'
    from "${buildDir}/libs/${unversionedJar.archiveName}"
    into "/${gradleInstallDir}/lib/plugins"
    doLast {
        println "Installed in: ${gradleInstallDir}/lib/plugins as: ${unversionedJar.archiveName}"
    }
}

task uninstallPlugin(type: Delete) {
    def gradleInstallDir = gradle.gradleHomeDir
    group = 'installation'
    description = 'Removes the plugin from your gradle distribution.'
    delete("/${gradleInstallDir}/lib/plugins/${unversionedJar.archiveName}")
}
